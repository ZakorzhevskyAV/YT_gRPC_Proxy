// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.23.2
// source: ytgrpcproxy/ytgrpcproxy.proto

package ytgrpcproxy

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	ThumbnailReturn_Get_FullMethodName = "/ytgrpcproxy.ThumbnailReturn/Get"
)

// ThumbnailReturnClient is the client API for ThumbnailReturn service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ThumbnailReturnClient interface {
	Get(ctx context.Context, in *ThumbnailAddress, opts ...grpc.CallOption) (*ThumbnailData, error)
}

type thumbnailReturnClient struct {
	cc grpc.ClientConnInterface
}

func NewThumbnailReturnClient(cc grpc.ClientConnInterface) ThumbnailReturnClient {
	return &thumbnailReturnClient{cc}
}

func (c *thumbnailReturnClient) Get(ctx context.Context, in *ThumbnailAddress, opts ...grpc.CallOption) (*ThumbnailData, error) {
	out := new(ThumbnailData)
	err := c.cc.Invoke(ctx, ThumbnailReturn_Get_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ThumbnailReturnServer is the server API for ThumbnailReturn service.
// All implementations must embed UnimplementedThumbnailReturnServer
// for forward compatibility
type ThumbnailReturnServer interface {
	Get(context.Context, *ThumbnailAddress) (*ThumbnailData, error)
	mustEmbedUnimplementedThumbnailReturnServer()
}

// UnimplementedThumbnailReturnServer must be embedded to have forward compatible implementations.
type UnimplementedThumbnailReturnServer struct {
}

func (UnimplementedThumbnailReturnServer) Get(context.Context, *ThumbnailAddress) (*ThumbnailData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (UnimplementedThumbnailReturnServer) mustEmbedUnimplementedThumbnailReturnServer() {}

// UnsafeThumbnailReturnServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ThumbnailReturnServer will
// result in compilation errors.
type UnsafeThumbnailReturnServer interface {
	mustEmbedUnimplementedThumbnailReturnServer()
}

func RegisterThumbnailReturnServer(s grpc.ServiceRegistrar, srv ThumbnailReturnServer) {
	s.RegisterService(&ThumbnailReturn_ServiceDesc, srv)
}

func _ThumbnailReturn_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ThumbnailAddress)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThumbnailReturnServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ThumbnailReturn_Get_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThumbnailReturnServer).Get(ctx, req.(*ThumbnailAddress))
	}
	return interceptor(ctx, in, info, handler)
}

// ThumbnailReturn_ServiceDesc is the grpc.ServiceDesc for ThumbnailReturn service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ThumbnailReturn_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "ytgrpcproxy.ThumbnailReturn",
	HandlerType: (*ThumbnailReturnServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _ThumbnailReturn_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ytgrpcproxy/ytgrpcproxy.proto",
}
